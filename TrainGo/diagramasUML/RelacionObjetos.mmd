classDiagram
    direction TB
    class Circulacion {
        - Tren tren
        - Ruta ruta
        - LocalDateTime horaLlegadaReal
        - UUID id
        - LocalDateTime horaSalida
        - EnumCirculacion estado
        - BigDecimal precioPorAsiento
        + compareTo(Object) int
        + toString() String
        + getHoraSalida() LocalTime
        + tren() Tren
        + horaSalida() LocalDateTime
        + horaLlegadaReal() LocalDateTime?
        + ciudadDestino() String
        + hashCode() int
        + precioPorAsiento() BigDecimal
        + nombreCiudadOrigen() String?
        + ruta() Ruta
        + ciudadOrigen() String
        + equals(Object) boolean
        + nombreCiudadDestino() String?
        + getCadenaHoraSalida() String
        + trenId() UUID
        + fabricarCirculacion(String, UUID, Ruta, EnumCirculacion, LocalDateTime, LocalDateTime, BigDecimal) Circulacion?
        + getPrecioPorAsiento() BigDecimal
        + id() UUID
        + getCadenaHoraFechaSalida() String
        + estado() EnumCirculacion
    }
    class Estacion {
        - String ciudad
        + ciudad() String
    }
    class FachadaAplicacion {
        - FachadaDAO fdao
        - Internacionalizacion itz
        - FachadaGui fgui
        - ResourceBundle bundle
        - Usuario usuario
        + autenticar(String, String) boolean
        + getUsrDireccion() String
        + main(String[]) void
        + getBundleInstance() ResourceBundle
        + cambiarIdioma(EnumIdioma) void
        - extraerDatosPorDefecto() void
        + getUsrTelefono() int
        + buscarRutaPorNombres(String, String) Ruta
        + actualizarUsuario(String, String, String, int) void
        - lanzaInterfazGrafica() void
        + getUsrCorreo() String
        + getEstaciones() List~Estacion~
        + getUsrNombre() String
        + getUsrDni() int
        + relanzarGUI() void
        + obtenerCirculacionesRuta(Ruta, LocalDate) List
    }
    class Reserva
    class Ruta {
        - Estacion destino
        - int distancia
        - Estacion origen
        + ciudadOrigen() String
        + ciudadDestino() String
        + destino() Estacion
        + origen() Estacion
        + distancia() int
    }
    class Tren {
        - UUID id
        - int num
        + equals(Object) boolean
        + hashCode() int
        + num() int
        + id() UUID
    }
    class Usuario {
        - String contrasenha
        - LocalDate fechaNacimiento
        - int DNI
        - String nombre
        - int telefono
        - String direccion
        - String correo
        + printReadyString() String
        + direccion() String
        + fechaNacimiento() LocalDate
        + toString() String
        + actualizarDatos(String, String, int) void
        + equals(Object) boolean
        + contrasenha() String
        + hashCode() int
        + correo() String
        + telefono() int
        + DNI() int
        + nombre() String
    }

    Circulacion "1" *--> "ruta 1" Ruta
    Circulacion "1" *--> "tren 1" Tren
    FachadaAplicacion "1" *--> "usuario 1" Usuario
    Ruta "1" *--> "origen 1" Estacion
    Reserva "1" *--> "circulacion" Circulacion
    Reserva "1" *--> "usuario" Usuario